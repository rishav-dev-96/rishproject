{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\risha\\\\Documents\\\\GitHub\\\\rishproject\\\\newreact\\\\classic-todo-app\\\\classic-todo-app\\\\src\\\\wrapper.js\";\nimport React from \"react\";\nimport TodoInput from \"./todoInput\";\nimport TodoList from \"./todoList\";\n\nclass Wrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoArray: [],\n      editTodoData: null,\n      editTodoIndex: null,\n      menu: null\n    };\n  }\n\n  setNewTodoInParent(newTodo) {\n    this.setState({\n      todoArray: [newTodo, ...this.state.todoArray]\n    });\n  }\n\n  deleteTodoFromList(index) {\n    let tempArray = [...this.state.todoArray];\n    tempArray.splice(index, 1);\n    this.setState({\n      todoArray: tempArray\n    });\n  }\n\n  getEditIndex(index) {\n    this.setState({\n      editTodoData: this.state.todoArray[index],\n      editTodoIndex: index\n    });\n  }\n\n  updateTodo(updateData) {\n    let tempArray = [...this.state.todoArray];\n    tempArray[this.state.editTodoIndex] = updateData;\n    this.setState({\n      todoArray: tempArray,\n      editTodoData: null,\n      editTodoIndex: null\n    });\n  }\n\n  checkboxChanged(index) {\n    let tempArray = [...this.state.todoArray];\n    tempArray[index].isCompleted = !tempArray[index].isCompleted;\n    this.setState({\n      todoArray: tempArray\n    });\n  }\n\n  setMenuToAll() {\n    this.setState({\n      menu: null\n    });\n  }\n\n  setMenuToActive() {\n    this.setState({\n      menu: false\n    });\n  }\n\n  setMenuToCompleted() {\n    this.setState({\n      menu: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"w-75\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid p-4  mt-3 mb-4 rounded  border border-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(TodoInput, {\n      getNewTodoFromChild: newTodo => this.setNewTodoInParent(newTodo),\n      editTodoData: this.state.editTodoData,\n      updateTodo: updateData => this.updateTodo(updateData),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(TodoList, {\n      todoArray: this.state.todoArray,\n      sendDeleteIndex: index => this.deleteTodoFromList(index),\n      sendEditIndex: index => this.getEditIndex(index),\n      checkboxChanged: index => this.checkboxChanged(index),\n      menu: this.state.menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Wrapper;","map":{"version":3,"sources":["C:/Users/risha/Documents/GitHub/rishproject/newreact/classic-todo-app/classic-todo-app/src/wrapper.js"],"names":["React","TodoInput","TodoList","Wrapper","Component","state","todoArray","editTodoData","editTodoIndex","menu","setNewTodoInParent","newTodo","setState","deleteTodoFromList","index","tempArray","splice","getEditIndex","updateTodo","updateData","checkboxChanged","isCompleted","setMenuToAll","setMenuToActive","setMenuToCompleted","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport TodoInput from \"./todoInput\";\r\nimport TodoList from \"./todoList\";\r\n\r\nclass Wrapper extends React.Component {\r\n  state = {\r\n    todoArray: [\r\n    ],\r\n    editTodoData: null,\r\n    editTodoIndex: null,\r\n    menu: null\r\n  };\r\n  setNewTodoInParent(newTodo) {\r\n    this.setState({\r\n      todoArray: [newTodo, ...this.state.todoArray]\r\n    });\r\n  }\r\n  deleteTodoFromList(index) {\r\n    let tempArray = [...this.state.todoArray];\r\n    tempArray.splice(index, 1);\r\n    this.setState({\r\n      todoArray: tempArray\r\n    });\r\n  }\r\n  getEditIndex(index) {\r\n    this.setState({\r\n      editTodoData: this.state.todoArray[index],\r\n      editTodoIndex: index\r\n    });\r\n  }\r\n  updateTodo(updateData) {\r\n    let tempArray = [...this.state.todoArray];\r\n    tempArray[this.state.editTodoIndex] = updateData;\r\n    this.setState({\r\n      todoArray: tempArray,\r\n      editTodoData: null,\r\n      editTodoIndex: null\r\n    });\r\n  }\r\n  checkboxChanged(index) {\r\n    let tempArray = [...this.state.todoArray];\r\n    tempArray[index].isCompleted = !tempArray[index].isCompleted;\r\n    this.setState({ todoArray: tempArray });\r\n  }\r\n  setMenuToAll() {\r\n    this.setState({ menu: null });\r\n  }\r\n  setMenuToActive() {\r\n    this.setState({ menu: false });\r\n  }\r\n  setMenuToCompleted() {\r\n    this.setState({ menu: true });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"w-75\">\r\n        <div className=\"jumbotron jumbotron-fluid p-4  mt-3 mb-4 rounded  border border-dark\">\r\n          <TodoInput\r\n            getNewTodoFromChild={newTodo => this.setNewTodoInParent(newTodo)}\r\n            editTodoData={this.state.editTodoData}\r\n            updateTodo={updateData => this.updateTodo(updateData)}\r\n          />\r\n        </div>\r\n        {/* <div className=\"text-center mb-4\">\r\n          <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              menu\r\n            </button>\r\n            <div className=\"dropdown-menu dropdown-menu-right\">\r\n              <button\r\n                onClick={() => this.setMenuToAll()}\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n              >\r\n                ALL\r\n              </button>\r\n              <button\r\n                onClick={() => this.setMenuToActive()}\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n              >\r\n                ACTIVE\r\n              </button>\r\n              <button\r\n                onClick={() => this.setMenuToCompleted()}\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n              >\r\n                COMPLETED\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        <div>\r\n          <TodoList\r\n            todoArray={this.state.todoArray}\r\n            sendDeleteIndex={index => this.deleteTodoFromList(index)}\r\n            sendEditIndex={index => this.getEditIndex(index)}\r\n            checkboxChanged={index => this.checkboxChanged(index)}\r\n            menu={this.state.menu}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wrapper;\r\n"]},"metadata":{},"sourceType":"module"}