{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\risha\\\\Documents\\\\GitHub\\\\rishproject\\\\newreact\\\\classic-todo-app\\\\classic-todo-app\\\\src\\\\todoInput.js\";\nimport React from \"react\";\n\nclass TodoInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      date: \"\",\n      isCompleted: false\n    };\n\n    this.inputTitleOnchange = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.inputDateOnChange = event => {\n      this.setState({\n        date: event.target.value\n      });\n    };\n  }\n\n  buttonAddOnClick() {\n    if (!this.state.title) {\n      alert(\"Sorry , can't add/update Todo if title is Empty , Please provide a Todo title\");\n    } else if (!this.props.editTodoData) {\n      this.props.getNewTodoFromChild(this.state);\n    } else {\n      this.props.updateTodo(this.state);\n    }\n\n    this.setState({\n      title: \"\",\n      date: \"\",\n      isCompleted: false\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.editTodoData && this.props.editTodoData !== prevProps.editTodoData) {\n      var input = this.props.editTodoData.date;\n      var output = input.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n      this.setState({\n        title: this.props.editTodoData.title,\n        date: output,\n        isCompleted: this.props.editTodoData.isCompleted\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"text-center \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      onChange: event => this.inputTitleOnchange(event),\n      placeholder: \"Enter todo title here...\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"date\",\n      onChange: event => this.inputDateOnChange(event),\n      value: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: !this.props.editTodoData && \"btn btn-info\" || \"btn btn-warning\",\n      onClick: () => this.buttonAddOnClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, !this.props.editTodoData && \"ADD\" || \"UPDATE\", \" \")));\n  }\n\n}\n\nexport default TodoInput;","map":{"version":3,"sources":["C:/Users/risha/Documents/GitHub/rishproject/newreact/classic-todo-app/classic-todo-app/src/todoInput.js"],"names":["React","TodoInput","Component","state","title","date","isCompleted","inputTitleOnchange","event","setState","target","value","inputDateOnChange","buttonAddOnClick","alert","props","editTodoData","getNewTodoFromChild","updateTodo","componentDidUpdate","prevProps","input","output","replace","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoInput extends React.Component {\r\n  state = {\r\n    title: \"\",\r\n    date: \"\",\r\n    isCompleted: false\r\n  };\r\n\r\n  inputTitleOnchange = event => {\r\n    this.setState({\r\n      title: event.target.value\r\n    });\r\n  };\r\n\r\n  inputDateOnChange = event => {\r\n    this.setState({\r\n      date: event.target.value\r\n    });\r\n  };\r\n\r\n  buttonAddOnClick() {\r\n    if(!this.state.title){alert(\"Sorry , can't add/update Todo if title is Empty , Please provide a Todo title\")}\r\n    else if (!this.props.editTodoData) {\r\n      this.props.getNewTodoFromChild(this.state);\r\n    } else {\r\n      this.props.updateTodo(this.state);\r\n    }\r\n    this.setState({ title: \"\", date: \"\", isCompleted: false });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.editTodoData &&\r\n      this.props.editTodoData !== prevProps.editTodoData\r\n    ) {\r\n      var input = this.props.editTodoData.date;\r\n      var output = input.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\r\n      this.setState({\r\n        title: this.props.editTodoData.title,\r\n        date: output,\r\n        isCompleted: this.props.editTodoData.isCompleted\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center \">\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            onChange={event => this.inputTitleOnchange(event)}\r\n            placeholder=\"Enter todo title here...\"\r\n            value={this.state.title}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            onChange={event => this.inputDateOnChange(event)}\r\n            value={this.state.date}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            className={\r\n              (!this.props.editTodoData && \"btn btn-info\") || \"btn btn-warning\"\r\n            }\r\n            onClick={() => this.buttonAddOnClick()}\r\n          >\r\n            {(!this.props.editTodoData && \"ADD\") || \"UPDATE\"}{\" \"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoInput;\r\n"]},"metadata":{},"sourceType":"module"}